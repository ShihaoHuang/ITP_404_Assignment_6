{"version":3,"sources":["Modal.js","Page.js","Api.js","RepoModal.js","App.js","serviceWorker.js","index.js"],"names":["Modal","member","onClose","useState","info","setInfo","useEffect","fetch","headers","Authorization","Accept","then","response","json","createPortal","className","tabIndex","style","display","type","data-dismiss","aria-label","onClick","aria-hidden","name","company","following","document","getElementById","Page","handleEach","selectMember","selectRepo","page","setPage","followers","setFollowers","onFollow","elements","data","newId","id","newElement","login","find","element","Number","newFollowers","filter","url","method","unFollow","concat","body","JSON","stringify","console","log","key","src","avatar_url","repos_url","map","RepoModal","mapElements","href","html_url","target","rel","description","App","memberModal","setMemberModal","repo","setRepo","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"gPAIe,SAASA,EAAT,GAAmC,IAAnBC,EAAkB,EAAlBA,OAASC,EAAS,EAATA,QAAS,EACrBC,mBAAS,IADY,mBACtCC,EADsC,KAChCC,EADgC,KAkB7C,OAhBAC,qBAAU,WASCC,MAAM,gCAAD,OAAiCN,GAAU,CACrDO,QAAS,CACPC,cAAe,iDACfC,OAAQ,sBAXDC,MAAK,SAACC,GACb,OAAOA,EAASC,UACjBF,MAAK,SAAAC,GACJP,EAAQO,QAGb,IASIE,uBACH,oCACA,yBAAKC,UAAU,wBACf,yBAAKA,UAAU,QAAQC,SAAS,KAAKC,MAAO,CAAEC,QAAS,UACrD,yBAAKH,UAAU,gBACb,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,gBACb,wBAAIA,UAAU,eAAd,kBACA,4BACEI,KAAK,SACLJ,UAAU,QACVK,eAAa,QACbC,aAAW,QACXC,QAASpB,GAET,0BAAMqB,cAAY,QAAlB,UAGJ,yBAAKR,UAAU,cACb,oCAAUX,EAAKoB,MACf,uCAAapB,EAAKqB,SAAW,QAC7B,yCAAerB,EAAKsB,WAAa,SAEnC,yBAAKX,UAAU,gBACb,4BACEI,KAAK,SACLJ,UAAU,oBACVK,eAAa,QACbE,QAASpB,GAJX,eAaRyB,SAASC,eAAe,SCzDjB,SAASC,EAAT,GAA0C,IAsExBC,EAtEHC,EAA0B,EAA1BA,aAAcC,EAAY,EAAZA,WAAY,EAC5B7B,mBAAS,IADmB,mBAC7C8B,EAD6C,KACvCC,EADuC,OAElB/B,mBAAS,IAFS,mBAE7CgC,EAF6C,KAElCC,EAFkC,KAKpD,SAASC,EAASC,GACd,ICDoBC,EDCdC,EAAQF,EAASG,GACjBC,EAAa,CACfD,GAAKD,EACLhB,KAAOc,EAASK,OAKpB,GAHcR,EAAUS,MAAK,SAAAC,GACzB,OAAOA,EAAQJ,KAAOK,OAAON,MAEvB,CACN,IAAMO,EAAeZ,EAAUa,QAAO,SAAAH,GAClC,OAAOA,EAAQJ,KAAOK,OAAON,OCGtC,SAAkBC,GACrB,IAAMQ,EAAG,yBAAqBR,GACvBlC,MAAM0C,EAAK,CACdC,OAAQ,WDJJC,CAASX,GACTJ,EAAaW,OACZ,CACD,IAAMA,EAAeZ,EAAUiB,OAAOV,GChBtBH,EDiBJG,ECdbnC,MAFK,iBAEM,CACd2C,OAFW,OAGXG,KAAMC,KAAKC,UAAUhB,GACrB/B,QAAQ,CACJ,eAAe,sBAEpBG,MAAK,SAAAC,GACJ,OAAOA,EAASC,UDQZuB,EAAaW,IA8EnB,OAlEAzC,qBAAU,WCpCLC,MAAM,kBAAkBI,MAAK,SAAAC,GAEhC,OADA4C,QAAQC,IAAI7C,GACLA,EAASC,UD2CUF,MAAK,SAAAC,GACzBwB,EAAaxB,MATJD,MAAK,WATbJ,MAAM,8CAA+C,CAC1DC,QAAS,CACPC,cAAe,iDACfC,OAAQ,sBAgCDC,MAAK,SAAAC,GACd,OAAOA,EAASC,UACfF,MAAK,SAAAC,GACNsB,EAAQtB,WAxBT,IA4DK,8BA/BmBkB,EAO3B,SAAuBe,GACrB,OAEI,wBAAIa,IAAKb,EAAQJ,GAAI1B,UAAU,mBAC3B,yBAAKA,UAAU,iBACX,yBAAKA,UAAY,oCAAoC4C,IAAKd,EAAQe,WAAYtC,QAAS,kBAAIS,EAAac,EAAQF,UAChH,yBAAK5B,UAAW,IACZ,wBAAIA,UAAY,cAAcO,QAAS,kBAAIS,EAAac,EAAQF,SAASE,EAAQF,OACjF,yBAAK5B,UAAY,QACb,4BAAQA,UAAW,eAAeO,QAAS,kBAAIU,EAAWa,EAAQgB,aAAlE,eAEJ,yBAAK9C,UAAY,QACb,4BAAQA,UAAY,gBAAgBO,QAAS,kBAAIe,EAASQ,MAxCzDJ,EAwCkFI,EAAQJ,GAvC/FN,EAAUS,MAAK,SAAAC,GACzB,OAAOA,EAAQJ,KAAOK,OAAOL,MAGrB,gDAIL,oDATX,IAAuBA,GAqDRR,EA9BD6B,KAAI,SAAAjB,GACd,OAAOf,EAAWe,QEvEb,SAASkB,EAAT,GAAoC,IAAhBd,EAAe,EAAfA,IAAM/C,EAAS,EAATA,QAAS,EACtBC,mBAAS,IADa,mBACvCC,EADuC,KACjCC,EADiC,KAsC9C,OApCAC,qBAAU,YAURkD,QAAQC,IAAIR,GACL1C,MAAM0C,EAAK,CAChBzC,QAAS,CACPC,cAAe,iDACfC,OAAQ,uBAbCC,MAAK,SAACC,GACb,OAAOA,EAASC,UACjBF,MAAK,SAAAC,GACJP,EAAQO,QAGd,IA6BKE,uBACH,oCAWA,yBAAKC,UAAU,wBACf,yBAAKA,UAAU,QAAQC,SAAS,KAAKC,MAAO,CAAEC,QAAS,UACrD,yBAAKH,UAAU,gBACb,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,gBACb,wBAAIA,UAAU,eAAd,QACA,4BACEI,KAAK,SACLJ,UAAU,QACVK,eAAa,QACbC,aAAW,QACXC,QAASpB,GAET,0BAAMqB,cAAY,QAAlB,UAGJ,yBAAKR,UAAU,cAAcE,MAAO,CAAC,aAAc,sBAAuB,aAAc,SA7ChG,SAAqBsB,EAAMT,GAEzB,OAAOS,EAAKuB,KAAI,SAAAjB,GACd,OAAOf,EAAWe,MA2CXmB,CAAY5D,GAxCvB,SAAoByC,GAChB,OAAO,oCACP,yBAAKa,IAAOb,EAAQJ,IAClB,6BAAK,uBAAGwB,KAAMpB,EAAQqB,SAAUC,OAAO,SAASC,IAAI,uBAAuBvB,EAAQrB,OAE3E,4CAAkBqB,EAAQwB,aAAe,SACzC,mCAoCN,yBAAKtD,UAAU,gBACb,4BACEI,KAAK,SACLJ,UAAU,oBACVK,eAAa,QACbE,QAASpB,GAJX,eAcRyB,SAASC,eAAe,SClDjB0C,MA/Bf,WAAgB,IAAD,EACyBnE,mBAAS,IADlC,mBACNoE,EADM,KACOC,EADP,OAEWrE,mBAAS,IAFpB,mBAENsE,EAFM,KAEAC,EAFA,KAqBb,OACE,oCACEH,GAAe,kBAACvE,EAAD,CAAOC,OAAQsE,EAAarE,QAnB/C,WACEsE,EAAe,OAmBdC,GAAQ,kBAACV,EAAD,CAAWd,IAAKwB,EAAMvE,QAXjC,WACEwE,EAAQ,OAYP,kBAAC7C,EAAD,CAAME,aAnBT,SAA2B9B,GACzBuE,EAAevE,IAkByB+B,WAhB1C,SAAoByC,GAClBC,EAAQD,QCNQE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFvD,SAASC,eAAe,SDyHpB,kBAAmBuD,WACrBA,UAAUC,cAAcC,MACrB1E,MAAK,SAAA2E,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLjC,QAAQiC,MAAMA,EAAMC,c","file":"static/js/main.b5c7b8fc.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport {createPortal} from \"react-dom\"\n\n\nexport default function Modal({member,  onClose}){\n    const [info, setInfo] = useState({})\n    useEffect(()=>{\n        fetchAPI().then((response)=>{\n            return response.json();\n        }).then(response=>{\n            setInfo(response);\n        })\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n    function fetchAPI(){\n        return fetch(`https://api.github.com/users/${member}`, {\n          headers: {\n            Authorization: 'token 31830d17e83cee43166324aaa35c93d6444e083a',\n            Accept: \"application/json\",\n          },\n        });\n      }\n    return createPortal(\n        <>\n        <div className=\"modal-backdrop show\"></div>\n        <div className=\"modal\" tabIndex=\"-1\" style={{ display: \"block\" }}>\n          <div className=\"modal-dialog\">\n            <div className=\"modal-content\">\n              <div className=\"modal-header\">\n                <h5 className=\"modal-title\">Member Profile</h5>\n                <button\n                  type=\"button\"\n                  className=\"close\"\n                  data-dismiss=\"modal\"\n                  aria-label=\"Close\"\n                  onClick={onClose}\n                >\n                  <span aria-hidden=\"true\">&times;</span>\n                </button>\n              </div>\n              <div className=\"modal-body\">\n                <p>Name: {info.name}</p>\n                <p>Company: {info.company || \"None\"}</p>\n                <p>following: {info.following || \"None\"}</p>\n              </div>\n              <div className=\"modal-footer\">\n                <button\n                  type=\"button\"\n                  className=\"btn btn-secondary\"\n                  data-dismiss=\"modal\"\n                  onClick={onClose}\n                >\n                  Cancel\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </>,\n        document.getElementById(\"root\")\n    )\n}","import React, {useState, useEffect} from 'react';\nimport {fetchFollowers, addFollower, unFollow} from \"./Api.js\"\nexport default function Page({selectMember, selectRepo}){\n    const [page, setPage] = useState([]);\n    const [followers, setFollowers] = useState([]);\n\n\n    function onFollow(elements){\n        const newId = elements.id;\n        const newElement = {\n            id : newId,\n            name : elements.login,\n        };\n        const found = followers.find(element=>{\n            return element.id === Number(newId);\n        })\n        if (found){\n            const newFollowers = followers.filter(element=>{\n                return element.id !== Number(newId);\n            })\n            unFollow(newId);\n            setFollowers(newFollowers);\n        }else{\n            const newFollowers = followers.concat(newElement);\n            addFollower(newElement);\n            setFollowers(newFollowers);\n        }\n    }\n    function fetchAPI(){\n        return fetch(`https://api.github.com/orgs/emberjs/members`, {\n          headers: {\n            Authorization: 'token 31830d17e83cee43166324aaa35c93d6444e083a',\n            Accept: \"application/json\",\n          },\n        });\n      }\n    \n      useEffect(()=>{\n        getFollowers().then(()=>{\n            renderPage();\n            }\n        )\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n      }, [])\n\n      function getFollowers(){\n          return fetchFollowers().then(response=>{\n              setFollowers(response);\n          })\n      }\n\n      function displayFollow(id){\n          const found = followers.find(element=>{\n              return element.id === Number(id);\n          })\n          if (found){\n              return (<>\n                  Unfollow\n              </>)\n          }\n          return <>Follow</>\n      }\n\n      function renderPage(){\n        fetchAPI().then(response=>{\n          return response.json();\n        }).then(response=>{\n          setPage(response);\n        //   console.log(response)\n        })\n      }\n\n      function mapElements(data, handleEach){\n        // console.log(data)\n        return data.map(element=>{\n          return handleEach(element);\n        })\n      }\n    \n      function formatElement(element){\n        return (\n \n            <li key={element.id} className=\"list-group-item\">\n                <div className=\"row ml-4 mb-4\">\n                    <img className = \" col-2 p-3 rounded-circle pointer\" src={element.avatar_url} onClick={()=>selectMember(element.login)}></img>\n                    <div className =\"\">\n                        <h4 className = \"m-3 pointer\" onClick={()=>selectMember(element.login)}>{element.login}</h4>\n                        <div className = \" p-3\">\n                            <button className =\"btn btn-info\" onClick={()=>selectRepo(element.repos_url)}>Repository</button>\n                        </div>        \n                        <div className = \" p-3\">\n                            <button className = \"btn btn-light\" onClick={()=>onFollow(element)}>{displayFollow(element.id)}</button>\n                        </div>      \n                    </div>\n                \n                </div>\n            </li>\n            \n                  \n\n        )\n      }\n\n      return (<div>\n        {mapElements(page, formatElement)}\n      </div>)\n\n}","export function fetchFollowers(){\n    return fetch(\"/api/followers\").then(response=>{\n        console.log(response)\n        return response.json();\n    });\n}\n\nexport function addFollower(data){\n    const url = \"/api/followers\";\n    const method = \"POST\";\n    return fetch(url, {\n        method,\n        body: JSON.stringify(data),\n        headers:{\n            \"Content-Type\":\"application/json\",\n        },\n    }).then(response=>{\n        return response.json();\n    })\n}\n\nexport function unFollow(id){\n    const url = `/api/followers/${id}`;\n    return fetch(url, {\n        method: \"DELETE\",\n    });\n}\n\n","import React, {useState, useEffect} from 'react';\nimport {createPortal} from \"react-dom\"\n\n\nexport default function RepoModal({url,  onClose}){\n    const [info, setInfo] = useState([])\n    useEffect(()=>{\n        fetchAPI().then((response)=>{\n            return response.json();\n        }).then(response=>{\n            setInfo(response);\n        })\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    },[])\n\n   function fetchAPI(){\n      console.log(url)\n      return fetch(url, {\n        headers: {\n          Authorization: 'token 31830d17e83cee43166324aaa35c93d6444e083a',\n          Accept: \"application/json\",\n        },\n      });\n    }\n  \n      function mapElements(data, handleEach){\n        // console.log(data)\n        return data.map(element=>{\n          return handleEach(element);\n        })\n      }\n      function handleEach(element){\n          return <>\n          <div key = {element.id}>\n            <div><a href={element.html_url} target=\"_blank\" rel=\"noopener noreferrer\">{element.name}</a></div> \n\n                    <div>description:{element.description || \" none\"}</div>\n                    <br></br>\n          </div>\n                \n          </>\n      }\n    return createPortal(\n        <>\n\n\n\n\n\n\n\n\n\n\n        <div className=\"modal-backdrop show\"></div>\n        <div className=\"modal\" tabIndex=\"-1\" style={{ display: \"block\" }}>\n          <div className=\"modal-dialog\">\n            <div className=\"modal-content\">\n              <div className=\"modal-header\">\n                <h5 className=\"modal-title\">Repo</h5>\n                <button\n                  type=\"button\"\n                  className=\"close\"\n                  data-dismiss=\"modal\"\n                  aria-label=\"Close\"\n                  onClick={onClose}\n                >\n                  <span aria-hidden=\"true\">&times;</span>\n                </button>\n              </div>\n              <div className=\"modal-body \" style={{'max-height': 'calc(100vh - 210px)', 'overflow-y': 'auto'}}>\n                {mapElements(info, handleEach)}\n             </div>\n              <div className=\"modal-footer\">\n                <button\n                  type=\"button\"\n                  className=\"btn btn-secondary\"\n                  data-dismiss=\"modal\"\n                  onClick={onClose}\n                >\n                  Cancel\n                </button>\n              </div>\n            </div>\n            \n          </div>\n        </div>\n      </>,\n        document.getElementById(\"root\")\n    )\n}","\nimport React, {useState} from 'react';\nimport \"./App.css\"\nimport Modal from \"./Modal\"\nimport Page from \"./Page\"\nimport RepoModal from './RepoModal'\n\nfunction App() {\n  const [memberModal, setMemberModal] = useState(\"\")\n  const [repo, setRepo] = useState(\"\")\n\n  function closeMemberModal(){\n    setMemberModal(\"\");\n  }\n  function selectMemberModal(member){\n    setMemberModal(member);\n  }\n  function selectRepo(repo){\n    setRepo(repo);\n  }\n  function closeRepoModal(){\n    setRepo(\"\");\n  }\n\n\n\n\n\n  return (\n    <>\n    { memberModal && <Modal member={memberModal} onClose = {closeMemberModal}></Modal>}\n    {repo && <RepoModal url={repo} onClose = {closeRepoModal}></RepoModal>}\n      \n     <Page selectMember={selectMemberModal} selectRepo={selectRepo}></Page>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}